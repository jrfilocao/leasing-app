{
  "swagger": "2.0",
  "info": {
    "description": "API for administrating leasing contracts.",
    "version": "1.0.0",
    "title": "Leasing App's API"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "contract-controller",
      "description": "Contract Controller"
    },
    {
      "name": "customer-controller",
      "description": "Customer Controller"
    },
    {
      "name": "vehicle-controller",
      "description": "Vehicle Controller"
    }
  ],
  "paths": {
    "/api/contracts": {
      "get": {
        "tags": [
          "contract-controller"
        ],
        "summary": "getAllContracts",
        "operationId": "getAllContractsUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContractDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "contract-controller"
        ],
        "summary": "createContract",
        "operationId": "createContractUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "contract",
            "description": "contract",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ContractDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/contracts/{contractId}": {
      "get": {
        "tags": [
          "contract-controller"
        ],
        "summary": "getContract",
        "operationId": "getContractUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "contractId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContractDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "contract-controller"
        ],
        "summary": "updateContract",
        "operationId": "updateContractUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "contract",
            "description": "contract",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContractDto"
            }
          },
          {
            "name": "contractId",
            "in": "path",
            "description": "contractId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContractDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/customers": {
      "get": {
        "tags": [
          "customer-controller"
        ],
        "summary": "getAllCustomers",
        "operationId": "getAllCustomersUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomerDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "customer-controller"
        ],
        "summary": "createCustomer",
        "operationId": "createCustomerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customer",
            "description": "customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/customers/{customerId}": {
      "get": {
        "tags": [
          "customer-controller"
        ],
        "summary": "getCustomer",
        "operationId": "getCustomerUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "customer-controller"
        ],
        "summary": "updateCustomer",
        "operationId": "updateCustomerUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "customer",
            "description": "customer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          {
            "name": "customerId",
            "in": "path",
            "description": "customerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustomerDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/vehicles": {
      "get": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "getAllVehicles",
        "operationId": "getAllVehiclesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VehicleDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "createVehicle",
        "operationId": "createVehicleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "vehicle",
            "description": "vehicle",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VehicleDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/vehicles/{vehicleId}": {
      "get": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "getVehicle",
        "operationId": "getVehicleUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vehicleId",
            "in": "path",
            "description": "vehicleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VehicleDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "vehicle-controller"
        ],
        "summary": "updateVehicle",
        "operationId": "updateVehicleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "vehicle",
            "description": "vehicle",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VehicleDto"
            }
          },
          {
            "name": "vehicleId",
            "in": "path",
            "description": "vehicleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VehicleDto"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ContractDto": {
      "type": "object",
      "properties": {
        "contractId": {
          "type": "integer",
          "format": "int64"
        },
        "contractNumber": {
          "type": "string",
          "example": "18f8f78ds7fdsfxj"
        },
        "customer": {
          "$ref": "#/definitions/CustomerDto"
        },
        "monthlyRate": {
          "type": "number",
          "example": 120.3
        },
        "vehicle": {
          "$ref": "#/definitions/VehicleDto"
        }
      },
      "title": "ContractDto"
    },
    "CustomerDto": {
      "type": "object",
      "properties": {
        "birthdate": {
          "type": "string",
          "format": "date",
          "example": "1984-10-16"
        },
        "customerId": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        }
      },
      "title": "CustomerDto"
    },
    "VehicleDto": {
      "type": "object",
      "properties": {
        "brand": {
          "type": "string",
          "example": "BMW"
        },
        "model": {
          "type": "string",
          "example": "X1"
        },
        "modelYear": {
          "type": "integer",
          "format": "int32",
          "example": 2020
        },
        "price": {
          "type": "number",
          "example": 10000
        },
        "vehicleId": {
          "type": "integer",
          "format": "int64"
        },
        "vehicleTypeId": {
          "type": "integer",
          "format": "int64"
        },
        "vin": {
          "type": "string",
          "example": "BMW45678901234567"
        }
      },
      "title": "VehicleDto"
    }
  }
}
